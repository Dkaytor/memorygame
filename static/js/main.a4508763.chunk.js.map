{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/MemoryCard/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","score","topScore","children","Title","MemoryCard","onClick","handleClick","id","alt","src","image","App","state","pictures","count","clickArray","handleIncrement","newScore","_this","setState","handleTopScore","newTopScore","shuffle","i","length","j","Math","floor","random","_ref","lostGame","newArr","console","log","push","includes","alert","_this2","this","components_Wrapper","components_Title","map","components_MemoryCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a4508763.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\n \n\n \nfunction Wrapper(props) {\n  return (\n    <div>\n   \n \n  <div className=\"row\">\n  \n    <h2 className=\"brand\">Memory Game</h2>\n \n    <h2 className=\"brand\">Click an image to begin!</h2>\n    \n    <h2 className=\"brand\">Score: {props.score} | Top Score: {props.topScore}</h2>\n    </div>\n\n\n<div className=\"wrapper\">{props.children}</div>\n</div>\n  )\n}\n  \n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n  <div className=\"header\">\n    \n    <div className=\"row\">\n   <h1 className=\"line\">Memory Game!</h1> \n  <h2 className=\"line\">Goal is to click on each image once!</h2>\n  <h2 className=\"line\">If you click on the same image twice you lose!</h2>\n\n  </div>\n\n  <div className=\"title\">{props.children}</div>\n </div>\n  \n\n \n  )\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\n\nfunction MemoryCard(props) {\n  return (\n    <div className=\"card\">\n    <div  onClick={() => props.handleClick(props.id)} className=\"img-container\">  \n    <img alt={props.id} src={props.image}/>\n    \n      </div>\n      \n  </div>\n  );\n}\n\n\nexport default MemoryCard;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport MemoryCard from \"./components/MemoryCard\";\nimport pictures from \"./pictures.json\";\n\nclass App extends Component {\n  state = {\n    pictures,\n    count: 0,\n    topScore: 0,\n    clickArray: []\n  };\n\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    let newScore = this.state.count + 1;\n    this.setState({ count: newScore });\n\n  };\n\n  handleTopScore = () => {\n    let newTopScore = this.state.topScore + 1;\n    this.setState({ topScore: newTopScore });\n  };\n\n  shuffle = () => {\n    const pictures = this.state.pictures;\n    for (let i = pictures.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [pictures[i], pictures[j]] = [pictures[j], pictures[i]];\n    }\n    this.setState({ pictures });\n\n  };\n\n  lostGame = () => this.setState({\n    count: 0,\n    clickArray: []\n  });\n\n  handleClick = (id) => {\n\n    let newArr = this.state.clickArray;\n\n    if (newArr.length === 0) {\n      console.log(\"check if 0\");\n      newArr.push(id);\n      console.log(\"in if \" + newArr.length);\n      this.handleIncrement();\n      this.shuffle();\n      this.setState({ clickArray: newArr });\n      return\n    }\n\n      if (newArr.length < 11) {\n        console.log(\"check if less than 11\");\n\n        if (newArr.includes(id)) {\n\n          console.log(\"you lost\");\n          alert(\"You lost\");\n          this.lostGame();\n          console.log(newArr);\n          this.shuffle();\n          return;\n        }\n       \n\n          console.log(\"keep going\");\n          newArr.push(id);\n          this.handleIncrement();\n          this.shuffle();\n          this.setState({ clickArray: newArr });\n        \n           }\n           else {\n    if (newArr === 11) {\n    \n    console.log(\"you won\");\n    this.lostGame();\n    this.handleTopScore();\n    this.shuffle();\n    return\n    }\n    console.log(\"why not stopping\");\n    alert(\"You won!\");\n    this.handleTopScore();\n    this.lostGame();\n    this.shuffle();\n    return\n  }\n  console.log(\"outside form\");\n}\n\n\n\n\nrender() {\n  return (\n    <Wrapper score={this.state.count} topScore={this.state.topScore}>\n      <Title></Title>\n      <div></div>\n      {this.state.pictures.map(pictures => (\n        <MemoryCard\n          shuffle={this.shuffle}\n          id={pictures.id}\n          key={pictures.id}\n          image={pictures.image}\n          handleClick={this.handleClick}\n        />\n      ))}\n\n    </Wrapper>\n  );\n}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}